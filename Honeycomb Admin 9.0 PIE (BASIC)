-- Honeycomb 9.1.1 P+ üêùüî•üé® Full Rebuild

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local TextChatService = game:GetService("TextChatService")
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")

local lp = Players.LocalPlayer
local prefix = "+"
local theme = "pie"
local rainbowToggle = false
local flameGradient = nil
local dragging, dragInput, dragStart, startPos

local cmds = {
    ws = "Set WalkSpeed",
    jp = "Set JumpPower",
    infjump = "Enable Infinite Jump",
    uninfjump = "Disable Infinite Jump",
    theme = "Change Theme",
    prefix = "Set Command Prefix",
    noclip = "Enable Noclip",
    unnoclip = "Disable Noclip",
    cmds = "Show all commands"
}

-- Themes
local function getTheme()
    if theme == "pie" then
        return {
            Card = Color3.fromRGB(30,30,30),
            Accent = Color3.fromRGB(255,130,0),
            Base = Color3.fromRGB(45,45,45),
            Text = Color3.fromRGB(255,255,255)
        }
    elseif theme == "holo" then
        return {
            Card = Color3.fromRGB(20,20,30),
            Accent = Color3.fromRGB(0,255,255),
            Base = Color3.fromRGB(10,10,20),
            Text = Color3.fromRGB(200,200,255)
        }
    elseif theme == "flame" then
        return {
            Card = Color3.fromRGB(20,20,20),
            Accent = Color3.fromRGB(255,80,0),
            Base = Color3.fromRGB(30,10,10),
            Text = Color3.fromRGB(255,255,200)
        }
    elseif theme == "rainbow" then
        return {
            Card = Color3.fromRGB(20,20,30),
            Accent = Color3.fromHSV(tick()%5/5, 1, 1),
            Base = Color3.fromRGB(30,30,30),
            Text = Color3.new(1,1,1)
        }
    end
end

-- Notify
local function notify(text)
    game.StarterGui:SetCore("SendNotification", {
        Title = "Honeycomb üêù",
        Text = text,
        Duration = 4
    })
end

-- UI setup
local gui = Instance.new("ScreenGui", lp:WaitForChild("PlayerGui"))
gui.Name = "Honeycomb"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Name = "HoneycombMain"
frame.Size = UDim2.new(0, 300, 0, 170)
frame.Position = UDim2.new(0.5, -150, 0.4, 0)
frame.BackgroundColor3 = getTheme().Card
frame.BorderSizePixel = 0

local corner = Instance.new("UICorner", frame)
corner.CornerRadius = UDim.new(0, 12)

local label = Instance.new("TextLabel", frame)
label.Size = UDim2.new(1, 0, 0, 25)
label.Text = "üêù Honeycomb 9.1.1 P+"
label.TextColor3 = getTheme().Accent
label.Font = Enum.Font.GothamSemibold
label.BackgroundTransparency = 1
label.TextScaled = true

local input = Instance.new("TextBox", frame)
input.PlaceholderText = prefix.."ws 80"
input.Position = UDim2.new(0.05, 0, 0, 40)
input.Size = UDim2.new(0.9, 0, 0, 30)
input.BackgroundColor3 = getTheme().Base
input.TextColor3 = getTheme().Text
input.Font = Enum.Font.Gotham
input.TextScaled = true
input.Text = ""
Instance.new("UICorner", input).CornerRadius = UDim.new(0, 8)

-- Suggestion label
local suggest = Instance.new("TextLabel", frame)
suggest.Size = UDim2.new(0.9, 0, 0, 25)
suggest.Position = UDim2.new(0.05, 0, 0, 75)
suggest.BackgroundTransparency = 1
suggest.TextColor3 = Color3.fromRGB(180,180,180)
suggest.Font = Enum.Font.Gotham
suggest.TextScaled = true
suggest.Text = "Suggestions:"

-- Command suggestions logic
input:GetPropertyChangedSignal("Text"):Connect(function()
    local txt = input.Text:lower()
    local found = {}
    for c, _ in pairs(cmds) do
        if c:sub(1, #txt) == txt then table.insert(found, c) end
    end
    suggest.Text = "Suggestions: "..table.concat(found, ", ")
end)

-- Run button
local run = Instance.new("TextButton", frame)
run.Position = UDim2.new(0.05, 0, 0, 110)
run.Size = UDim2.new(0.9, 0, 0, 30)
run.Text = "Run"
run.TextColor3 = getTheme().Text
run.BackgroundColor3 = getTheme().Accent
run.Font = Enum.Font.GothamBold
run.TextScaled = true
Instance.new("UICorner", run).CornerRadius = UDim.new(0, 8)

-- Draggable
local function makeDraggable(obj)
	obj.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = obj.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	obj.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	UIS.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			local delta = input.Position - dragStart
			obj.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)
end
makeDraggable(frame)

-- Command system
local function runCommand(cmd, args)
	if cmd == "ws" then
		local v = tonumber(args[1])
		if v then lp.Character.Humanoid.WalkSpeed = v end
	elseif cmd == "jp" then
		local v = tonumber(args[1])
		if v then lp.Character.Humanoid.JumpPower = v end
	elseif cmd == "infjump" then
		_G.InfJump = true
	elseif cmd == "uninfjump" then
		_G.InfJump = false
	elseif cmd == "noclip" then
		_G.Noclip = true
	elseif cmd == "unnoclip" then
		_G.Noclip = false
	elseif cmd == "theme" then
		if args[1] then
			theme = args[1]:lower()
			frame.BackgroundColor3 = getTheme().Card
			input.BackgroundColor3 = getTheme().Base
			input.TextColor3 = getTheme().Text
			label.TextColor3 = getTheme().Accent
			run.BackgroundColor3 = getTheme().Accent
		end
	elseif cmd == "prefix" then
		if args[1] then prefix = args[1] end
	elseif cmd == "cmds" then
		local all = {}
		for c, d in pairs(cmds) do
			table.insert(all, "+"..c.." - "..d)
		end
		for i = 1, #all, 3 do
			local part = table.concat({all[i], all[i+1], all[i+2]}, "\n")
			notify(part)
		end
	else
		notify("Unknown command: "..cmd)
	end
end

run.MouseButton1Click:Connect(function()
    local msg = input.Text
    if msg:sub(1, #prefix) == prefix then
        local args = msg:sub(#prefix+1):split(" ")
        local cmd = table.remove(args,1)
        runCommand(cmd, args)
    end
end)

-- ChatCommand Handler
TextChatService.OnIncomingMessage = function(msg)
	local txt = msg.Text
	if txt and txt:sub(1,#prefix)==prefix then
		local args = txt:sub(#prefix+1):split(" ")
		local cmd = table.remove(args,1)
		runCommand(cmd, args)
	end
end

-- InfJump handler
UIS.JumpRequest:Connect(function()
	if _G.InfJump and lp.Character and lp.Character:FindFirstChildOfClass("Humanoid") then
		local h = lp.Character:FindFirstChildOfClass("Humanoid")
		h:ChangeState("Jumping") wait() h:ChangeState("Seated")
	end
end)

-- Noclip
RS.Stepped:Connect(function()
	if _G.Noclip and lp.Character then
		for _,v in pairs(lp.Character:GetDescendants()) do
			if v:IsA("BasePart") then v.CanCollide = false end
		end
	end
end)
